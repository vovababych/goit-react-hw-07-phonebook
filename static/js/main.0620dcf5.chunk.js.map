{"version":3,"sources":["components/DecorContainer/DecorContainer.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/DecorContainer/DecorContainer.module.css","components/ContactsList/ContactsList.module.css"],"names":["DecorContainer","title","children","className","s","decor","leftDecor","rightDecor","circleDecor","innerDecor","titleDecor","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","checkUniqName","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","getIsLoading","loading","getError","error","ContactForm","useState","setName","tel","setTel","useSelector","dispatch","useDispatch","onAdd","post","then","response","data","catch","contactsOperations","onCheckforUniqName","find","alert","reset","actions","onSubmit","e","preventDefault","telephone","arr","split","formatNumber","autoComplete","type","value","placeholder","onChange","target","pattern","minLength","maxLength","ContactsList","useEffect","a","get","filteredContacts","isLoading","onDeleteContact","id","delete","length","text","contactsList","map","phone","href","toString","replace","btnDeleteContact","onClick","message","Filter","App","createReducer","_","payload","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0620dcf5.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './DecorContainer.module.css';\n\nfunction DecorContainer({ title, children }) {\n  return (\n    <>\n      <section className={s.decor}>\n        <div className={s.leftDecor}></div>\n        <div className={s.rightDecor}></div>\n        <div className={s.circleDecor}></div>\n        <div className={s.innerDecor}>\n          <h3 className={s.titleDecor}>{title}</h3>\n          {children}\n        </div>\n      </section>\n    </>\n  );\n}\n\nDecorContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]),\n};\n\nexport default DecorContainer;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterContacts = createAction('contacts/filter');\nexport const checkUniqName = createAction('contacts/uniqName');\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n\n  try {\n    const response = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchContactError(error));\n  }\n\n  // axios\n  //   .get('/contacts')\n  //   .then(response => dispatch(fetchContactSuccess(response.data)))\n  //   .catch(error => dispatch(fetchContactError(error)));\n};\n\nexport const addContact = (name, tel) => dispatch => {\n  const contact = { name, tel };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(response => dispatch(addContactSuccess(response.data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest(id));\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    ),\n);\nexport const getIsLoading = state => state.contacts.loading;\nexport const getError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [tel, setTel] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeTel = e => {\n    setTel(e.target.value);\n  };\n\n  const onAdd = (name, tel) =>\n    dispatch(contactsOperations.addContact(name, tel));\n\n  const onCheckforUniqName = name => {\n    const uniqName = !!contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (uniqName) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return false;\n    }\n    if (!(name && tel)) {\n      alert('Empty field');\n      return false;\n    }\n\n    return dispatch(actions.checkUniqName(name));\n  };\n\n  const formatNumber = tel => {\n    const arr = tel.split('');\n    return `+38 (${arr[0]}${arr[1]}${arr[2]}) ${arr[3]}${arr[4]}${arr[5]}-${arr[6]}${arr[7]}-${arr[8]}${arr[9]}`;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const checkUniqName = onCheckforUniqName(name);\n    if (!checkUniqName) return;\n\n    const telephone = formatNumber(tel);\n    onAdd(name, telephone);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setTel('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Введите имя\"\n          onChange={handleChangeName}\n        />\n        <input\n          type=\"tel\"\n          name=\"tel\"\n          value={tel}\n          pattern=\"[0-9]{10}\"\n          placeholder=\"067 123 45 67\"\n          minLength=\"10\"\n          maxLength=\"10\"\n          onChange={handleChangeTel}\n        />\n        <input type=\"submit\" value=\"Сохранить контакт\" />\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func,\n  onCheckforUniqName: PropTypes.func,\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsOperations from '../../redux/contacts/contacts-operations';\nimport {\n  getFilteredContacts,\n  getIsLoading,\n  getError,\n} from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\nimport s from './ContactsList.module.css';\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  // console.log('error', error);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <>\n      {!isLoading && !error && filteredContacts.length < 1 && (\n        <p className={s.text}>Нет контактов</p>\n      )}\n\n      <ul className={s.contactsList}>\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(({ id, name, tel }) => (\n            <li key={id} className={s.contact}>\n              <span className={s.name}>{name}</span>\n              <span className={s.phone}>\n                <a href={`tel:+${tel.toString().replace(/[^\\d;]/g, '')}`}>\n                  {tel}\n                </a>\n              </span>\n              <button\n                className={s.btnDeleteContact}\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                x\n              </button>\n            </li>\n          ))}\n      </ul>\n      {isLoading && <h3> Загрузка ...</h3>}\n      {error && <h3>{error.message}</h3>}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  // title: PropTypes.string,\n  // contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactsList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport * as actions from '../../redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport PropTypes from 'prop-types';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilter = e => dispatch(actions.filterContacts(e.target.value));\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Поиск по имени ...\"\n        onChange={onFilter}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import DecorContainer from './components/DecorContainer';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <>\n      <DecorContainer title={'Телефонная книга'}>\n        <ContactForm />\n      </DecorContainer>\n      <DecorContainer title=\"Список контактов\">\n        <Filter />\n        <ContactsList />\n      </DecorContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n  checkUniqName,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n\n  [checkUniqName]: state => state,\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  // [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactRequest]: () => null,\n  [fetchContactError]: (_, { payload }) => payload,\n  [addContactRequest]: () => null,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactRequest]: () => null,\n  [deleteContactError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import contactReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const myMiddleware = store => next => action => {\n//   console.log('Моя прослойка', action);\n//   next(action);\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter', '_persist'],\n// };\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n    // persistReducer(contactsPersistConfig, contactReducer),\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n// export default { store, persistor };\n\n// ----Middleware-----\n// const myMiddleware = store => next => action=> {body}\n\n// function myMiddleware(store) {\n//   return function (next) {\n//     return function (action) {\n//       body;\n//     };\n//   };\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"decor\":\"DecorContainer_decor__3vEMk\",\"leftDecor\":\"DecorContainer_leftDecor__feTKk\",\"rightDecor\":\"DecorContainer_rightDecor__pQt8n\",\"circleDecor\":\"DecorContainer_circleDecor__3ukcw\",\"innerDecor\":\"DecorContainer_innerDecor__etnjX\",\"titleDecor\":\"DecorContainer_titleDecor__-yGKm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactsList_text__2umai\",\"contactsList\":\"ContactsList_contactsList__3eO6n\",\"contact\":\"ContactsList_contact__7p-AG\",\"name\":\"ContactsList_name__1Cdjp\",\"phone\":\"ContactsList_phone__2wv7E\",\"btnDeleteContact\":\"ContactsList_btnDeleteContact__lVCQs\"};"],"sourceRoot":""}